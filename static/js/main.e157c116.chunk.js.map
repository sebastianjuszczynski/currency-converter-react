{"version":3,"sources":["GlobalStyle.js","Result/styled.js","Result/index.js","Container/money.jpg","Container/styled.js","Container/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","Form/styled.js","Form/index.js","App.js","useRatesData.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","ResultBox","styled","p","Result","result","value","toFixed","ContainerBox","main","image","Header","h1","Container","children","ClockBox","div","formatDate","date","toLocaleString","undefined","weekday","hour","minute","second","day","month","Clock","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","FormBox","form","FormFieldset","fieldset","Legend","legend","FormLabel","label","FormInput","input","FormButton","button","Text","Form","calculateResult","ratesData","amount","setAmount","sourceCurrency","setSourceCurrency","options","Object","keys","currencies","map","currency","onSubmit","event","preventDefault","htmlFor","className","onChange","target","type","id","name","required","as","App","setResult","setRatesData","axios","get","then","response","data","rates","catch","useRatesData","resultValue","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e157c116.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n    box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n    font-family: 'Nerko One', cursive;\r\n    background-color: #eee;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const ResultBox = styled.p`\r\n    background-color: hsl(66, 100%, 65%);\r\n    border: 8px solid black;\r\n    border-radius: 5px;\r\n    color: hsl(120, 93%, 40%);\r\n    text-align: center;\r\n    font-size: 40px;\r\n    width: 70%;\r\n    margin: 0 auto;\r\n    padding: 40px;\r\n`;","\r\nimport React from \"react\";\r\nimport { ResultBox } from \"./styled\";\r\n\r\nexport const Result = ({ result }) => {\r\n  return result &&\r\n      <ResultBox>\r\n          Otrzymujesz {`${result.value.toFixed(2)}`} zÅ‚otych. Nie wydaj na gÅ‚upoty :)\r\n      </ResultBox>;\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/money.824ba21a.jpg\";","import styled from \"styled-components\";\r\nimport image from \"./money.jpg\"\r\n\r\nexport const ContainerBox = styled.main`\r\n    height: 100vh;\r\n    width: 100%;\r\n    background-image: url(${image});\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-origin: border-box;\r\n    overflow: hidden;\r\n    position: relative;\r\n    z-index: 0;\r\n\r\n    &::after {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n        z-index: -1;\r\n    }    \r\n`;\r\nexport const Header = styled.h1`\r\n    text-transform: uppercase;\r\n    letter-spacing: 5px;\r\n    color: white;\r\n    font-size: 100px;\r\n    margin: 0;\r\n    padding: 15px;\r\n    text-align: center;\r\n    font-weight: normal;\r\n`","import React from \"react\";\r\nimport { ContainerBox, Header } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n  <ContainerBox>\r\n    <Header>Kalkulator walut ğŸ’¸</Header>\r\n    {children}\r\n  </ContainerBox>\r\n);\r\n\r\nexport default Container;","import styled from \"styled-components\";\r\n\r\nexport const ClockBox = styled.div`\r\n    text-align: right;\r\n    font-family: monospace;\r\n    color: #777;\r\n`;","import React from \"react\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\nimport { ClockBox } from \"./styled\";\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    day: \"numeric\",\r\n    month: \"long\"\r\n});\r\n\r\nexport const Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <ClockBox>\r\n            Dzisiaj jest\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </ClockBox>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n}","import styled from \"styled-components\";\r\n\r\nexport const FormBox = styled.form`\r\n    margin: 0 auto;\r\n    padding: 15px;\r\n    width: 50%;\r\n    background-color: #F8FFB3;\r\n    border: 8px solid black;\r\n    border-radius: 5px;\r\n`;\r\nexport const FormFieldset = styled.fieldset`\r\n    font-size: 20px;\r\n    background-color: hsl(66, 100%, 65%);\r\n    border: 2px solid hsl(120, 93%, 40%);\r\n    border-radius: 5px;\r\n`;\r\nexport const Legend = styled.legend`\r\n    font-size: 32px;\r\n    color: hsl(120, 93%, 40%);\r\n    padding: 5px;\r\n    border: 2px solid hsl(120, 93%, 40%);\r\n    border-radius: 5px;\r\n`;\r\nexport const FormLabel = styled.label`\r\n    font-size: 26px;\r\n    color: hsl(120, 93%, 40%);\r\n`;\r\nexport const FormInput = styled.input`\r\n    color: hsl(120, 93%, 40%);\r\n    width: 50%;\r\n    float: right;\r\n    border: 2px solid hsl(120, 93%, 40%);\r\n    border-radius: 5px;\r\n\r\n    &::after {\r\n        content: \"\";\r\n        clear: both;\r\n    }\r\n`;\r\nexport const FormButton = styled.button`\r\n    width: 100%;\r\n    padding: 8px;\r\n    text-transform: uppercase;\r\n    border: 4px solid hsl(120, 93%, 40%);\r\n    color: hsl(120, 93%, 40%);\r\n    background-color: rgb(22, 61, 61);\r\n    font-size: 50px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background-color: hsl(180, 47%, 20%);\r\n        color: hsl(120, 93%, 45%);\r\n    }\r\n`;\r\nexport const Text = styled.div`\r\n    margin: auto;\r\n    padding: 20px;\r\n    text-align: center;\r\n`;\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Clock } from \"../Clock\";\r\nimport { FormBox, FormFieldset, Legend, FormLabel, FormInput, FormButton, Text } from \"./styled\";\r\n\r\nexport const Form = ({ calculateResult, ratesData }) => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [sourceCurrency, setSourceCurrency] = useState(\"PLN\");\r\n    \r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(+amount, sourceCurrency);\r\n  }\r\n  const options = ratesData\r\n        && Object.keys(ratesData.currencies).map(currency =>\r\n            <option key={currency}>{currency}</option>);\r\n\r\n  return (\r\n    <FormBox onSubmit={onSubmit}>\r\n      <Clock />\r\n      <FormFieldset>\r\n        <Legend>UzupeÅ‚nij dane:</Legend>\r\n        {ratesData ? (<>\r\n        <p>\r\n          <FormLabel htmlFor=\"amount\" className=\"form__label\">Podaj kwotÄ™ w *:</FormLabel>\r\n          <FormInput\r\n            value={amount}\r\n            onChange={({ target }) => setAmount(target.value)}\r\n            className=\"form__input\"\r\n            type=\"number\" id=\"amount\"\r\n            name=\"amount\"\r\n            required\r\n          />\r\n        </p>\r\n        <p>\r\n          <FormLabel htmlFor=\"currency\" className=\"form__label\">Wybierz walutÄ™:</FormLabel>\r\n          <FormInput as=\"select\"\r\n            value={sourceCurrency}\r\n            onChange={({ target }) => setSourceCurrency(target.value)}\r\n            name=\"currency\"\r\n            id=\"currency\">\r\n              {options}\r\n          </FormInput>\r\n        </p>\r\n        <p>\r\n          <FormButton>Przelicz na PLN-y!!!</FormButton>\r\n        </p>\r\n        </>) : (\r\n          <Text>\r\n          {ratesData === \"error\"\r\n              ? `WystÄ…piÅ‚ bÅ‚Ä…d. SprawdÅº poÅ‚Ä…czenie internetowe,\r\n              a jeÅ›li to nie pomoÅ¼e - sprÃ³buj ponownie pÃ³Åºniej.`\r\n              :\r\n              `Trwa pobieranie danych z Europejskiego Banku Centralnego.`\r\n          }\r\n      </Text>\r\n        )}\r\n      </FormFieldset>\r\n    </FormBox>\r\n  )\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Result } from \"./Result\";\r\nimport Container from \"./Container\";\r\nimport { useRatesData } from \"./useRatesData\";\r\nimport { Form } from \"./Form\";\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [result, setResult] = useState(\"\");\r\n  const ratesData = useRatesData();\r\n\r\n  const calculateResult = (amount, sourceCurrency) => {\r\n    const plnRates = ratesData.currencies;\r\n    const resultValue = amount / plnRates[sourceCurrency];\r\n    setResult({\r\n        value: resultValue,\r\n    });\r\n};\r\n\r\n  return (\r\n    <Container>\r\n      <Form calculateResult={calculateResult} ratesData={ratesData} />\r\n      <Result result={result} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","  \r\nimport { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\n\r\nexport const useRatesData = () => {\r\n    const [ratesData, setRatesData] = useState();\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://api.exchangeratesapi.io/latest?base=PLN\")\r\n            .then(response => setRatesData({\r\n                date: response.data.date,\r\n                currencies: response.data.rates,\r\n            }))\r\n            .catch(() => setRatesData(\"error\"))\r\n    }, [])\r\n\r\n    return ratesData;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from './GlobalStyle';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}