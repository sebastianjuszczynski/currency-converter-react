{"version":3,"sources":["GlobalStyle.js","Result/styled.js","Result/index.js","Container/money.jpg","Container/styled.js","Container/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","Form/styled.js","Form/index.js","App.js","useRatesData.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","ResultBox","styled","p","Result","result","targetAmount","toFixed","currency","ContainerBox","main","image","Header","h1","Container","children","ClockBox","div","formatDate","date","toLocaleString","undefined","weekday","hour","minute","second","day","month","Clock","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","FormBox","form","FormFieldset","fieldset","Legend","legend","FormLabel","label","FormInput","input","FormButton","button","Text","Error","Info","Form","calculateResult","ratesData","amount","setAmount","setCurrency","onSubmit","event","preventDefault","state","htmlFor","className","value","onChange","target","type","id","name","required","as","Object","keys","rates","map","App","setResult","setRatesData","setTimeout","a","fetch","response","ok","statusText","json","useRatesData","rate","sourceAmount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3731ac23.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n    box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n    font-family: 'Nerko One', cursive;\r\n    background-color: #eee;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const ResultBox = styled.p`\r\n    background-color: hsl(66, 100%, 65%);\r\n    border: 8px solid black;\r\n    border-radius: 5px;\r\n    color: hsl(120, 93%, 40%);\r\n    text-align: center;\r\n    font-size: 40px;\r\n    width: 70%;\r\n    margin: 10px auto;\r\n    padding: 40px;\r\n`;","\r\nimport React from \"react\";\r\nimport { ResultBox } from \"./styled\";\r\n\r\nexport const Result = ({ result }) => {\r\n  return result &&\r\n      <ResultBox>\r\n          Otrzymasz {`${result.targetAmount.toFixed(2)} ${result.currency}`}. Tylko ostrożnie ;)\r\n      </ResultBox>;\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/money.824ba21a.jpg\";","import styled from \"styled-components\";\r\nimport image from \"./money.jpg\"\r\n\r\nexport const ContainerBox = styled.main`\r\n    height: 100vh;\r\n    width: 100%;\r\n    background-image: url(${image});\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-origin: border-box;\r\n    overflow: hidden;\r\n    position: relative;\r\n    z-index: 0;\r\n\r\n    &::after {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n        z-index: -1;\r\n    }    \r\n`;\r\nexport const Header = styled.h1`\r\n    text-transform: uppercase;\r\n    letter-spacing: 5px;\r\n    color: white;\r\n    font-size: 100px;\r\n    margin: 0;\r\n    padding: 15px;\r\n    text-align: center;\r\n    font-weight: normal;\r\n`","import React from \"react\";\r\nimport { ContainerBox, Header } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n  <ContainerBox>\r\n    <Header>Kalkulator walut 💸</Header>\r\n    {children}\r\n  </ContainerBox>\r\n);\r\n\r\nexport default Container;","import styled from \"styled-components\";\r\n\r\nexport const ClockBox = styled.div`\r\n    text-align: right;\r\n    font-family: monospace;\r\n    color: #777;\r\n`;","import React from \"react\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\nimport { ClockBox } from \"./styled\";\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    day: \"numeric\",\r\n    month: \"long\"\r\n});\r\n\r\nexport const Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <ClockBox>\r\n            Dzisiaj jest\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </ClockBox>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n}","import styled from \"styled-components\";\r\n\r\nexport const FormBox = styled.form`\r\n    margin: 0 auto;\r\n    padding: 15px;\r\n    width: 50%;\r\n    background-color: #F8FFB3;\r\n    border: 8px solid black;\r\n    border-radius: 5px;\r\n`;\r\nexport const FormFieldset = styled.fieldset`\r\n    font-size: 20px;\r\n    background-color: hsl(66, 100%, 65%);\r\n    border: 2px solid hsl(120, 93%, 40%);\r\n    border-radius: 5px;\r\n`;\r\nexport const Legend = styled.legend`\r\n    font-size: 32px;\r\n    color: hsl(120, 93%, 40%);\r\n    padding: 5px;\r\n    border: 2px solid hsl(120, 93%, 40%);\r\n    border-radius: 5px;\r\n`;\r\nexport const FormLabel = styled.label`\r\n    font-size: 26px;\r\n    color: hsl(120, 93%, 40%);\r\n`;\r\nexport const FormInput = styled.input`\r\n    color: hsl(120, 93%, 40%);\r\n    width: 50%;\r\n    float: right;\r\n    border: 2px solid hsl(120, 93%, 40%);\r\n    border-radius: 5px;\r\n\r\n    &::after {\r\n        content: \"\";\r\n        clear: both;\r\n    }\r\n`;\r\nexport const FormButton = styled.button`\r\n    width: 100%;\r\n    margin: 5px auto;\r\n    padding: 8px;\r\n    text-transform: uppercase;\r\n    border: 4px solid hsl(120, 93%, 40%);\r\n    color: hsl(120, 93%, 40%);\r\n    background-color: rgb(22, 61, 61);\r\n    font-size: 50px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background-color: hsl(180, 47%, 20%);\r\n        color: hsl(120, 93%, 45%);\r\n    }\r\n`;\r\nexport const Text = styled.div`\r\n    margin: auto;\r\n    padding: 20px;\r\n    text-align: center;\r\n    color: hsl(120, 93%, 40%);\r\n`;\r\nexport const Error = styled.div`\r\n    margin: auto;\r\n    padding: 20px;\r\n    text-align: center;\r\n    color: crimson;\r\n`;\r\nexport const Info = styled.div`\r\n    margin: auto;\r\n    padding: 0;\r\n    text-align: center;\r\n    color: hsl(120, 93%, 40%);\r\n    font-size: 16px;\r\n`;\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Clock } from \"../Clock\";\r\nimport { FormBox, FormFieldset, Legend, FormLabel, FormInput, FormButton, Text, Error, Info } from \"./styled\";\r\n\r\nexport const Form = ({ calculateResult, ratesData }) => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [currency, setCurrency] = useState(\"GBP\");\r\n\r\n\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(currency, amount);\r\n  }\r\n  return (\r\n    <FormBox onSubmit={onFormSubmit}>\r\n      <Clock />\r\n      <FormFieldset>\r\n\r\n        <Legend>Uzupełnij dane:</Legend>\r\n        {ratesData.state === \"loading\"\r\n          ? (<Text>\r\n            Poczekaj chwilkę... Ładuję dane z Banku...\r\n          </Text>\r\n          )\r\n          : (\r\n            ratesData.state === \"error\" ? (\r\n              <Error>\r\n                Sprawdź połączenie z internetem lub spróbuj ponownie.\r\n              </Error>\r\n            ) : (\r\n                <>\r\n                  <p>\r\n                    <FormLabel htmlFor=\"amount\" className=\"form__label\">Podaj kwotę w złotówkach*:</FormLabel>\r\n                    <FormInput\r\n                      value={amount}\r\n                      onChange={({ target }) => setAmount(target.value)}\r\n                      type=\"number\" id=\"amount\"\r\n                      name=\"amount\"\r\n                      required\r\n                    />\r\n                  </p>\r\n                  <p>\r\n                    <FormLabel htmlFor=\"currency\" className=\"form__label\">Wybierz walutę:</FormLabel>\r\n                    <FormInput as=\"select\"\r\n                      value={currency}\r\n                      onChange={({ target }) => setCurrency(target.value)}\r\n                      name=\"currency\"\r\n                      id=\"currency\">\r\n                      {Object.keys(ratesData.rates).map(((currency) => (\r\n                        <option\r\n                          key={currency}\r\n                          value={currency}\r\n                        >\r\n                          {currency}\r\n                        </option>)))}\r\n                    </FormInput>\r\n                  </p>\r\n                  <p>\r\n                    <FormButton>Przelicz</FormButton>\r\n                  </p>\r\n                  <Info>\r\n                    Kursy walut pochodzą z Europejskiego Banku Centralnego.<br />\r\n                    Aktualne na dzień: {ratesData.date}\r\n                  </Info>\r\n                </>))}\r\n\r\n\r\n      </FormFieldset>\r\n    </FormBox>\r\n  )\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Result } from \"./Result\";\r\nimport Container from \"./Container\";\r\nimport { useRatesData } from \"./useRatesData\";\r\nimport { Form } from \"./Form\";\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [result, setResult] = useState(\"\");\r\n  const ratesData = useRatesData();\r\n\r\n  const calculateResult = (currency, amount) => {\r\n     const rate = ratesData.rates[currency];\r\n     setResult({\r\n         sourceAmount: +amount,\r\n         targetAmount: amount * rate,\r\n         currency,\r\n     })\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form calculateResult={calculateResult} ratesData={ratesData} />\r\n      <Result result={result} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useRatesData = () => {\r\n    const [ratesData, setRatesData] = useState({\r\n        state: \"loading\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchRates = async () => {\r\n            try {\r\n                const response = await fetch(\"https://api.exchangeratesapi.io/latest?base=PLN\")\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                const { rates, date } = await response.json();\r\n\r\n                setRatesData({\r\n                    state: \"success\",\r\n                    rates,\r\n                    date,\r\n                });\r\n            } catch {\r\n                setRatesData({\r\n                    state: \"error\",\r\n                });\r\n            }\r\n        };\r\n        setTimeout(fetchRates, 2000);\r\n    }, []);\r\n\r\n    return ratesData;\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from './GlobalStyle';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}